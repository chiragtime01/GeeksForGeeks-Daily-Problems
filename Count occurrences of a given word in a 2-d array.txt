class Solution
{
   public int findOccurrence(char mat[][], String target)
   {
       int visited[][]=new int[mat.length][mat[0].length];
       int cnt=0;
       for(int i=0;i<mat.length;i++)
       {
           for(int j=0;j<mat[0].length;j++)
           {
               if(mat[i][j]==target.charAt(0))
               {
                   cnt+=dfs(i,j,mat,target,visited,0);
                  // System.out.println(cnt);
               }
           }
       }
       return cnt;
       
   }
   public int dfs(int i,int j,char mat[][],String target,int visited[][],int idx)
   {
    
    if(i>=mat.length||j>=mat[0].length||i<0||j<0||visited[i][j]==1||
    idx>=target.length()||mat[i][j]!=target.charAt(idx))
       return 0;
       
    if(idx==target.length()-1)
       {
           return 1;
       }
       
       
     visited[i][j]=1;
     String sub=target;
           int cnt=dfs(i+1,j,mat,sub,visited,idx+1)+
           dfs(i-1,j,mat,sub,visited,idx+1)+
           dfs(i,j+1,mat,sub,visited,idx+1)+
           dfs(i,j-1,mat,sub,visited,idx+1);
       visited[i][j]=0;
    return cnt;
   }
}