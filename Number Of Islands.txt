class Solution {
    
    public List<Integer> numOfIslands(int row, int col, int[][] operators) {
        //Your code here
        List<Integer> res=new ArrayList<>();
        int[][] mat=new int[row][col];
        int k=operators.length;
        for(int i=0;i<k;i++){
            for(int j=0;j<=i;j++)
            mat[operators[j][0]][operators[j][1]]=1;
            int cnt=0;
            for(int r=0;r<row;r++){
                for(int c=0;c<col;c++){
                    if(mat[r][c]==1){
                        dfs(r, c, row, col, mat);
                        cnt++;
                    }
                }
            }
            res.add(cnt);
        }
        return res;
    }
    
    private void dfs(int i, int j, int m, int n, int[][] mat){
        if(i>=m || i<0 || j>=n || j<0 || mat[i][j]==0) return;
        mat[i][j]=0;
        dfs(i+1, j, m, n, mat);
        dfs(i-1, j, m, n, mat);
        dfs(i, j-1, m, n, mat);
        dfs(i, j+1, m, n, mat);
    }
    
}