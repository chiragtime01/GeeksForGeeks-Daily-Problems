
class Solution
{
    //Function to find sum of weights of edges of the Minimum Spanning Tree.
    static int spanningTree(int V, ArrayList<ArrayList<ArrayList<Integer>>> adj) 
    {
                int ans = 0;

        int[] key = new int[V];

        boolean[] mst = new boolean[V];

        int[] parent = new int[V];

        

        Arrays.fill(key, Integer.MAX_VALUE);

        Arrays.fill(mst, false);

        Arrays.fill(parent, -1);

        

        key[0] = 0;

        

        for(int i=0;i<V;i++) {

            int mini = Integer.MAX_VALUE;

            int node = 0;

            for(int j=0;j<V;j++) {

                if(mst[j] == false && key[j] < mini) {

                    mini=key[j];

                    node = j;

                }

            }

            ans += mini;

            mst[node] = true;

            for(int k=0;k<adj.get(node).size();k++) {

                if((mst[adj.get(node).get(k).get(0)] == false) && (key[adj.get(node).get(k).get(0)] > adj.get(node).get(k).get(1))) {

                    key[adj.get(node).get(k).get(0)] = adj.get(node).get(k).get(1);

                }

            }

        }

        return ans;
    }
}
