class Solution

{

    public void inOrder(Node root, List<Integer> list){

        if(root == null) return;

        inOrder(root.left, list);

        list.add(root.data);

        inOrder(root.right, list);

    }

    public List<Integer> merge(Node root1,Node root2)

    {

        List<Integer> ans1 = new ArrayList<>();

        List<Integer> ans2 = new ArrayList<>();

        List<Integer> ans = new ArrayList<>();

        inOrder(root1, ans1);

        inOrder(root2, ans2);

        int i = 0, j = 0;

        while(i < ans1.size() && j < ans2.size()){

            if(ans1.get(i) <= ans2.get(j)){

                ans.add(ans1.get(i));

                i++;

            }

            else{

                ans.add(ans2.get(j));

                j++;

            }

        }

        while(i < ans1.size()){

            ans.add(ans1.get(i));

            i++;

        }

        while(j < ans2.size()){

            ans.add(ans2.get(j));

            j++;

        }

        return ans;

    }

}