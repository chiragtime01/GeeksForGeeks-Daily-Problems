class Solution
{
    public int[] reverseSpiral(int R, int C, int[][] a)
    {
         int n = R * C;
        int[] result = new int[n];
        Stack<Integer> stack = new Stack<>();
        int numbers = 0, i = 0, j = 0, spiral = 0;
        boolean right = true, down = false, left = false;
        while (numbers < n) {
            stack.add(a[i][j]);
            numbers++;
            if (right) {
                if (j + 1 < (C - spiral)) {
                    j++;
                } else {
                    i++;
                    down = true;
                    right = false;
                }
                continue;
            }

            if (down) {
                if (i + 1 < R - spiral) {
                    i++;
                } else {
                    j--;
                    left = true;
                    down = false;
                }
                continue;
            }

            if (left) {
                if (j - 1 >= spiral) {
                    j--;
                } else {
                    i--;
                    left = false;
                }
                continue;
            }

            if (i - 1 >= spiral + 1) {
                i--;
            } else {
                j++;
                right = true;
                spiral++;
            }
        }
        i = 0;
        while (!stack.isEmpty()) {
            result[i++] = stack.pop();
        }
        return result;
    }
}